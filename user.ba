## The god of commands.
set -o vi

alias ls='ls -aF --color=always'
alias mkdir='mkdir -pv'

## cat /dev/urandom|tr -dc "a-zA-Z0-9-_\$\?"|fold -w 50 |head -20

export AWS_CONFIG_FILE=~/.aws
export GOPATH=/home/mich/dev/go
export HISTTIMEFORMAT='%F %T '
export HISTCONTROL=ignoreboth
export HISTSIZE=10000
export PATH=$PATH:$GOPATH/bin
export TERM=xterm-256color

## PS1 goodness.

red="\e[38;5;196m"
dkred="\e[38;5;088m"
graze="\e[38;5;146m"
white="\e[0;37m"
gray="\e[1;30m"
green="\e[38;5;046m"
boldwhite="\e[1;37m"
blue="\e[1;34m"
yellow="\e[38;5;226m"
dkyellow="\e[0;33m"

PS1="\[$graze\]\u@\h \[$green\]\d \t\[$blue\]${SSH_TTY} \[$dkred\]+${SHLVL} \[$yellow\]\w\["'$(__git_colour "(%s)")'"\]"\
' $(__git_ps1 " (%s)")'"\[$dkyellow\]($SHLVL:\!)\[$boldwhite\]\$ "

__git_colour ()
{
  local c="$(git status 2>/dev/null | grep 'nothing.*to commit')"
  if [ -z "$c" ]; then
    printf "$red"
  else
    printf "$green"
  fi
}


__gitb ()
{
  local b="$(git symbolic-ref HEAD 2>/dev/null)"
  if [ -n "$b" ]; then
    printf " %s " "${b##refs/heads/}"
  fi
}

__git_ps1 ()
{
  [ -n "$(__gitb)" ] && printf " (%s)" "$(__gitb)" | sed "s/ //g"
}

if [ -f ~/.git-completion.bash ]; then
  . ~/.git-completion.bash
fi

## Term and Path

PROMPT_COMMAND='echo -ne "\033]0;${HOSTNAME}\007"'

PATH=/home/mich/.local/bin:/home/mich/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/bin:/usr/bin:/home/mich:/home/mich/dev/google-cloud-sdk/bin

# Start/Reuse SSH Agent - restart or re-use an existing agent
SSH_AGENT_CACHE=/tmp/ssh_agent_eval_`whoami`
if [ -s "${SSH_AGENT_CACHE}" ]
then
echo "Reusing existing ssh-agent"
eval `cat "${SSH_AGENT_CACHE}"`
# Check that agent still exists
kill -0 "${SSH_AGENT_PID}" 2>/dev/null
if [ $? -eq 1 ]
then
echo "ssh-agent pid ${SSH_AGENT_PID} no longer running"
# Looks like the SSH-Agent has died, it'll be restarted below
rm -f "${SSH_AGENT_CACHE}"
fi
fi

if [ ! -f "${SSH_AGENT_CACHE}" ]
then
echo "Starting new ssh-agent"
touch "${SSH_AGENT_CACHE}"
chmod 600 "${SSH_AGENT_CACHE}"
ssh-agent >> "${SSH_AGENT_CACHE}"
chmod 400 "${SSH_AGENT_CACHE}"
eval `cat "${SSH_AGENT_CACHE}"`
fi

##Clear agent between logins
if [ $SHLVL == 1 ]
then
  ssh-add -D
fi

## Gen arbitrary length password.

genpasswd() {
        local l=$1
        [ "$l" == "" ] && l=20
        tr -dc {[:graph:]} < /dev/urandom | head -c ${l} | xargs -0
}

alias dis2pr="xrandr --output LVDS1 --auto --output VGA1 --rotate left --auto --right-of LVDS1"

## date +%s  #to get timestamp
function ds() { date -d "@$1" ; }

## AWS-CLI bash completion
complete -C aws_completer aws

## Google sdk
# The next line updates PATH for the Google Cloud SDK.
#source /home/mich/src/google-cloud-sdk/path.bash.inc

# The next line enables bash completion for gcloud.
#source /home/mich/src/google-cloud-sdk/completion.bash.inc

## Git aliases

## http://jasonm23.github.io/oh-my-git-aliases.html
## https://git.wiki.kernel.org/index.php/Aliases#Aliases_with_arguments
alias ga="git add -p && git commit -m "
alias gb="git branch"
alias gc="git checkout"
alias gcm="git checkout master"
alias gct="git checkout test" ## git symbolic-ref refs/heads/test refs/heads/lt
alias gd="git diff "
alias gf="git reset HEAD --hard" ## git f$@k
alias gg="git grep --break --heading --line-number "
alias gi="git init"
alias gl="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gm="git merge"
alias gmt="git mergetool"
## go can be golang
alias gp="git pull"
alias gr="git rebase"
## gs usually ghost script
alias gsh="git stash" ## git hide my work
alias gsp="git stash pop" ##
alias gt="git status"
## !git remote update -p; git merge --ff-only @{u}
alias gu="git pull origin $(__gitb) && git push origin $(__gitb)" ## git catch up
alias gx="git shortlog -sn"
alias gz="git push" ## I'm going to sleep now, git zzzz
